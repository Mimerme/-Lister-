{
  "name": "youtube-api",
  "version": "1.2.0",
  "description": "A Node.JS module, which provides an object oriented wrapper for the Youtube v3 API.",
  "main": "lib/index.js",
  "author": {
    "name": "IonicaBizau",
    "email": "bizauionica@gmail.com"
  },
  "contributors": [
    {
      "name": "Ionică Bizău",
      "email": "bizauionica@gmail.com"
    },
    {
      "name": "Adam",
      "email": "aaschodd@asu.edu",
      "url": "brutalhonesty"
    },
    {
      "name": "Michael Scharl",
      "email": "developeme@gmail.com"
    },
    {
      "name": "Vels",
      "email": "velshome@yahoo.com",
      "url": "velsa"
    },
    {
      "name": "Rasmus Karlsson",
      "email": "pajlada@bithack.se"
    },
    {
      "name": "Brad Oyler",
      "email": "bradoyler@gmail.com"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/IonicaBizau/youtube-api.git"
  },
  "keywords": [
    "youtube",
    "api",
    "v3",
    "node"
  ],
  "license": "KINDLY",
  "bugs": {
    "url": "https://github.com/IonicaBizau/youtube-api/issues"
  },
  "dependencies": {
    "googleapis": "^2.1.3"
  },
  "homepage": "https://github.com/IonicaBizau/youtube-api",
  "directories": {
    "example": "example"
  },
  "devDependencies": {},
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "readme": "<!---------------------------------------------------------------------------->\n<!-- STOP, LOOK & LISTEN!                                                   -->\n<!-- ====================                                                   -->\n<!-- Do NOT edit this file directly since it's generated from a template    -->\n<!-- file, using https://github.com/IonicaBizau/node-blah                   -->\n<!--                                                                        -->\n<!-- If you found a typo in documentation, fix it in the source files       -->\n<!-- (`lib/*.js`) and make a pull request.                                  -->\n<!--                                                                        -->\n<!-- If you have any other ideas, open an issue.                            -->\n<!--                                                                        -->\n<!-- Please consider reading the contribution steps (CONTRIBUTING.md).      -->\n<!-- * * * Thanks! * * *                                                    -->\n<!---------------------------------------------------------------------------->\n\n# youtube-api [![Donate now][donate-now]][paypal-donations]\n\nA Node.JS module, which provides an object oriented wrapper for the Youtube v3 API.\n\n[![NPM](https://nodei.co/npm/youtube-api.png?downloads=true)](https://nodei.co/npm/youtube-api/)\n\n## Installation\n\n```sh\n$ npm i youtube-api\n```\n\n## Example\n\nYou may be interested to download [this test application](https://github.com/IonicaBizau/test-youtube-api)\nand play with the YouTube API resources there. Below you see an example how to use the library.\n\n```js\n/**\n * This script uploads a video (specifically `video.mp4` from the current\n * directory) to YouTube,\n *\n * To run this script you have to create OAuth2 credentials and download them\n * as JSON and replace the `credentials.json` file. Then install the\n * dependencies:\n *\n * npm i r-json lien opn bug-killer\n *\n * Don't forget to run an `npm i` to install the `youtube-api` dependencies.\n * */\n\n// Depende3ncies\nvar Youtube = require(\"youtube-api\")\n  , Fs = require(\"fs\")\n  , ReadJson = require(\"r-json\")\n  , Lien = require(\"lien\")\n  , Logger = require(\"bug-killer\")\n  , Opn = require(\"opn\")\n  ;\n\n// Constants\n// I downloaded the file from OAuth2 -> Download JSON\nconst CREDENTIALS = ReadJson(\"./credentials.json\");\n\n// Init lien server\nvar server = new Lien({\n    host: \"localhost\"\n  , port: 5000\n});\n\nvar stdIn = ReadLine.createInterface({\n    input: process.stdin\n  , output: process.stdout\n});\n\n// Authenticate\n// You can access the Youtube resources via OAuth2 only.\n// https://developers.google.com/youtube/v3/guides/moving_to_oauth#service_accounts\nvar oauth = Youtube.authenticate({\n    type: \"oauth\"\n  , client_id: CREDENTIALS.web.client_id\n  , client_secret: CREDENTIALS.web.client_secret\n  , redirect_url: CREDENTIALS.web.redirect_uris[0]\n});\n\nOpn(oauth.generateAuthUrl({\n    access_type: \"offline\"\n  , scope: [\"https://www.googleapis.com/auth/youtube.upload\"]\n}));\n\n// Handle oauth2 callback\nserver.page.add(\"/oauth2callback\", function (lien) {\n    Logger.log(\"Trying to get the token using the following code: \" + lien.search.code);\n    oauth.getToken(lien.search.code, function(err, tokens) {\n        if (err) { lien(err, 400); return Logger.log(err); }\n        oauth.setCredentials(tokens);\n        Youtube.videos.insert({\n            resource: {\n                // Video title and description\n                snippet: {\n                    title: \"Testing YoutTube API NodeJS module\"\n                  , description: \"Test video upload via YouTube API\"\n                }\n                // I don't want to spam my subscribers\n              , status: {\n                    privacyStatus: \"private\"\n                }\n            }\n            // This is for the callback function\n          , part: \"snippet,status\"\n\n            // Create the readable stream to upload the video\n          , media: {\n                body: Fs.createReadStream(\"video.mp4\")\n            }\n        }, function (err, data) {\n            if (err) { return lien.end(err, 400); }\n            lien.end(data);\n        });\n    });\n});\n\n```\n\n## Documentation\n\nThe [official Youtube documentation](https://developers.google.com/youtube/v3/docs/) is a very useful resource.\n\n - [Activities](https://developers.google.com/youtube/v3/docs/activities)\n - [ChannelBanners](https://developers.google.com/youtube/v3/docs/channelBanners)\n - [Channels](https://developers.google.com/youtube/v3/docs/channels)\n - [GuideCategories](https://developers.google.com/youtube/v3/docs/guideCategories)\n - [PlaylistItems](https://developers.google.com/youtube/v3/docs/playlistItems)\n - [Playlists](https://developers.google.com/youtube/v3/docs/playlists)\n - [Search](https://developers.google.com/youtube/v3/docs/search)\n - [Subscriptions](https://developers.google.com/youtube/v3/docs/subscriptions)\n - [Thumbnails](https://developers.google.com/youtube/v3/docs/thumbnails)\n - [VideoCategories](https://developers.google.com/youtube/v3/docs/videoCategories)\n - [Videos](https://developers.google.com/youtube/v3/docs/videos)\n\nIf you have any questions, just [open an issue](https://github.com/IonicaBizau/youtube-api/issues/new).\n\n### Authentication\n\n#### OAuth (Access Token)\n```js\nYoutube.authenticate({\n    type: \"oauth\"\n  , token: \"your access token\"\n});\n```\n\n#### OAuth (Refresh Token)\n```js\nYoutube.authenticate({\n    type: \"oauth\"\n  , refresh_token: \"your refresh token\"\n  , client_id: \"your client id\"\n  , client_secret: \"your client secret\"\n  , redirect_url: \"your refresh url\"\n});\n```\n\n#### Server Key\n*Only for requests that don't require [user authorization](https://developers.google.com/youtube/v3/guides/authentication) (certain list operations)*\n```js\nYoutube.authenticate({\n    type: \"key\"\n  , key: \"your server key\"\n});\n```\n\n## How to contribute\nHave an idea? Found a bug? See [how to contribute][contributing].\n\n## License\n[KINDLY][license] © [Ionică Bizău][website]–The [LICENSE](/LICENSE) file contains\na copy of the license.\n\n[license]: http://ionicabizau.github.io/kindly-license/?author=Ionic%C4%83%20Biz%C4%83u%20%3Cbizauionica@gmail.com%3E&year=2015\n[contributing]: /CONTRIBUTING.md\n[website]: http://ionicabizau.net\n[docs]: /DOCUMENTATION.md\n[paypal-donations]: https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=MG98D7NPFZ3MG\n[donate-now]: http://i.imgur.com/jioicaN.png\n",
  "readmeFilename": "README.md",
  "_id": "youtube-api@1.2.0",
  "dist": {
    "shasum": "cb4240de8d0bca0ea1656906021f3062c3db494e"
  },
  "_from": "youtube-api@",
  "_resolved": "https://registry.npmjs.org/youtube-api/-/youtube-api-1.2.0.tgz"
}
